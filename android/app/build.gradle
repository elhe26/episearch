def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.firebase.appdistribution'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    flavorDimensions "flavor-type"

    productFlavors {
        production {
            dimension "flavor-type"
            applicationId "com.episearch.clientes"
            resValue "string", "app_name", "EpiSearch"
            firebaseAppDistribution {
                serviceCredentialsFile="./episearch-prod-f446e81ebeaf.json"
                releaseNotesFile="./release-notes.txt"
                testers="erick.heredia@gmail.com"
            }
        }
        development {
            dimension "flavor-type"
            applicationId "com.episearch.dev"
            resValue "string", "app_name", "EpiSearch Dev"
            firebaseAppDistribution {
                serviceCredentialsFile="./episearch-dev-9719dc1489a8.json"
                releaseNotesFile="./release-notes-dev.txt"
                testers="erick.heredia@gmail.com"
            }
        }
    }


    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.episearch.clientes"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {  
        file(rootProject.file('key.properties')).with { propFile ->  
            if (propFile.canRead()) {  
                release {  
                    keyAlias keystoreProperties['keyAlias']  
                    keyPassword keystoreProperties['keyPassword']  
                    storeFile file(keystoreProperties['storeFile'])  
                    storePassword keystoreProperties['storePassword']  
                }
            }  
            else {  
                print('not signed')  
            }  
        }  
    }  

    buildTypes {  
        release {  
            file(rootProject.file('key.properties')).with { propFile ->  
                if (propFile.canRead()) {  
                    signingConfig signingConfigs.release  
                }  
            }  
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
}

